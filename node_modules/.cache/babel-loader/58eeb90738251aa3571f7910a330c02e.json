{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.string2binary = function (str) {\n  return utils.string2binary(str);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.string2Uint8Array = function (str) {\n  return utils.transformTo(\"uint8array\", str);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.uint8Array2String = function (array) {\n  return utils.transformTo(\"string\", array);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.string2Blob = function (str) {\n  var buffer = utils.transformTo(\"arraybuffer\", str);\n  return utils.arrayBuffer2Blob(buffer);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.arrayBuffer2Blob = function (buffer) {\n  return utils.arrayBuffer2Blob(buffer);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.transformTo = function (outputType, input) {\n  return utils.transformTo(outputType, input);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.getTypeOf = function (input) {\n  return utils.getTypeOf(input);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.checkSupport = function (type) {\n  return utils.checkSupport(type);\n};\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\n\n\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\n\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\nexports.pretty = function (str) {\n  return utils.pretty(str);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.findCompression = function (compressionMethod) {\n  return utils.findCompression(compressionMethod);\n};\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\n\n\nexports.isRegExp = function (object) {\n  return utils.isRegExp(object);\n};","map":{"version":3,"names":["utils","require","exports","string2binary","str","string2Uint8Array","transformTo","uint8Array2String","array","string2Blob","buffer","arrayBuffer2Blob","outputType","input","getTypeOf","checkSupport","type","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","compressionMethod","isRegExp","object"],"sources":["/Users/contactaisoft/Documents/GitHub/REACT_LANGUAGE/tcsmgmt/node_modules/jszip/lib/deprecatedPublicUtils.js"],"sourcesContent":["'use strict';\nvar utils = require('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function(str) {\n    return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function(str) {\n    return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function(array) {\n    return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function(str) {\n    var buffer = utils.transformTo(\"arraybuffer\", str);\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function(buffer) {\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function(outputType, input) {\n    return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function(input) {\n    return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function(type) {\n    return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function(str) {\n    return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function(compressionMethod) {\n    return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n    return utils.isRegExp(object);\n};\n\n"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,aAAR,GAAwB,UAASC,GAAT,EAAc;EAClC,OAAOJ,KAAK,CAACG,aAAN,CAAoBC,GAApB,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAF,OAAO,CAACG,iBAAR,GAA4B,UAASD,GAAT,EAAc;EACtC,OAAOJ,KAAK,CAACM,WAAN,CAAkB,YAAlB,EAAgCF,GAAhC,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAF,OAAO,CAACK,iBAAR,GAA4B,UAASC,KAAT,EAAgB;EACxC,OAAOR,KAAK,CAACM,WAAN,CAAkB,QAAlB,EAA4BE,KAA5B,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAN,OAAO,CAACO,WAAR,GAAsB,UAASL,GAAT,EAAc;EAChC,IAAIM,MAAM,GAAGV,KAAK,CAACM,WAAN,CAAkB,aAAlB,EAAiCF,GAAjC,CAAb;EACA,OAAOJ,KAAK,CAACW,gBAAN,CAAuBD,MAAvB,CAAP;AACH,CAHD;AAKA;AACA;AACA;AACA;;;AACAR,OAAO,CAACS,gBAAR,GAA2B,UAASD,MAAT,EAAiB;EACxC,OAAOV,KAAK,CAACW,gBAAN,CAAuBD,MAAvB,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAR,OAAO,CAACI,WAAR,GAAsB,UAASM,UAAT,EAAqBC,KAArB,EAA4B;EAC9C,OAAOb,KAAK,CAACM,WAAN,CAAkBM,UAAlB,EAA8BC,KAA9B,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAX,OAAO,CAACY,SAAR,GAAoB,UAASD,KAAT,EAAgB;EAChC,OAAOb,KAAK,CAACc,SAAN,CAAgBD,KAAhB,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAX,OAAO,CAACa,YAAR,GAAuB,UAASC,IAAT,EAAe;EAClC,OAAOhB,KAAK,CAACe,YAAN,CAAmBC,IAAnB,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAd,OAAO,CAACe,gBAAR,GAA2BjB,KAAK,CAACiB,gBAAjC;AAEA;AACA;AACA;AACA;;AACAf,OAAO,CAACgB,gBAAR,GAA2BlB,KAAK,CAACkB,gBAAjC;AAGA;AACA;AACA;AACA;;AACAhB,OAAO,CAACiB,MAAR,GAAiB,UAASf,GAAT,EAAc;EAC3B,OAAOJ,KAAK,CAACmB,MAAN,CAAaf,GAAb,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAF,OAAO,CAACkB,eAAR,GAA0B,UAASC,iBAAT,EAA4B;EAClD,OAAOrB,KAAK,CAACoB,eAAN,CAAsBC,iBAAtB,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAnB,OAAO,CAACoB,QAAR,GAAmB,UAAUC,MAAV,EAAkB;EACjC,OAAOvB,KAAK,CAACsB,QAAN,CAAeC,MAAf,CAAP;AACH,CAFD"},"metadata":{},"sourceType":"script"}