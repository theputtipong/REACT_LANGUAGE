{"ast":null,"code":"'use strict';\n\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\"; // contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\n\nexports.nodebuffer = typeof Buffer !== \"undefined\"; // contains true if JSZip can read/generate Uint8Array, false otherwise.\n\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n  exports.blob = false;\n} else {\n  var buffer = new ArrayBuffer(0);\n\n  try {\n    exports.blob = new Blob([buffer], {\n      type: \"application/zip\"\n    }).size === 0;\n  } catch (e) {\n    try {\n      var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var builder = new Builder();\n      builder.append(buffer);\n      exports.blob = builder.getBlob('application/zip').size === 0;\n    } catch (e) {\n      exports.blob = false;\n    }\n  }\n}","map":{"version":3,"names":["exports","base64","array","string","arraybuffer","ArrayBuffer","Uint8Array","nodebuffer","Buffer","uint8array","blob","buffer","Blob","type","size","e","Builder","window","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob"],"sources":["/Users/contactaisoft/Documents/GitHub/REACT_LANGUAGE/tcsmgmt/node_modules/jszip/lib/support.js"],"sourcesContent":["'use strict';\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n    exports.blob = false;\n}\nelse {\n    var buffer = new ArrayBuffer(0);\n    try {\n        exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n        }).size === 0;\n    }\n    catch (e) {\n        try {\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n        }\n        catch (e) {\n            exports.blob = false;\n        }\n    }\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,MAAR,GAAiB,IAAjB;AACAD,OAAO,CAACE,KAAR,GAAgB,IAAhB;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GAAsB,OAAOC,WAAP,KAAuB,WAAvB,IAAsC,OAAOC,UAAP,KAAsB,WAAlF,C,CACA;AACA;AACA;;AACAN,OAAO,CAACO,UAAR,GAAqB,OAAOC,MAAP,KAAkB,WAAvC,C,CACA;;AACAR,OAAO,CAACS,UAAR,GAAqB,OAAOH,UAAP,KAAsB,WAA3C;;AAEA,IAAI,OAAOD,WAAP,KAAuB,WAA3B,EAAwC;EACpCL,OAAO,CAACU,IAAR,GAAe,KAAf;AACH,CAFD,MAGK;EACD,IAAIC,MAAM,GAAG,IAAIN,WAAJ,CAAgB,CAAhB,CAAb;;EACA,IAAI;IACAL,OAAO,CAACU,IAAR,GAAe,IAAIE,IAAJ,CAAS,CAACD,MAAD,CAAT,EAAmB;MAC9BE,IAAI,EAAE;IADwB,CAAnB,EAEZC,IAFY,KAEH,CAFZ;EAGH,CAJD,CAKA,OAAOC,CAAP,EAAU;IACN,IAAI;MACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,iBAA7B,IAAkDF,MAAM,CAACG,cAAzD,IAA2EH,MAAM,CAACI,aAAhG;MACA,IAAIC,OAAO,GAAG,IAAIN,OAAJ,EAAd;MACAM,OAAO,CAACC,MAAR,CAAeZ,MAAf;MACAX,OAAO,CAACU,IAAR,GAAeY,OAAO,CAACE,OAAR,CAAgB,iBAAhB,EAAmCV,IAAnC,KAA4C,CAA3D;IACH,CALD,CAMA,OAAOC,CAAP,EAAU;MACNf,OAAO,CAACU,IAAR,GAAe,KAAf;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"script"}